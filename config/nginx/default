

server {
	listen 		80;
	server_name	localhost; #CHANGE TO DOMAIN NAME
	return 		301 https://$server_name$request_uri;
}

server {
	listen 443 default_server ssl;

	root /usr/local/share/www;
	index index.html index.htm;

	# Make site accessible from http://localhost/
    #CHANGE TO SERVER NAME
	server_name localhost;  #CHANGE TO DOMAIN NAME

        #UNCOMMENT TO ENABLE SSL
        #ssl on;
        #ssl_certificate /etc/ssl/certs/CHANGEME-MY-CERT.crt;
        #ssl_certificate_key /etc/ssl/private/CHANGEME-MY-CERT.key;

        #ssl_session_timeout 5m;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_dhparam /etc/ssl/certs/dhparams.pem;
	
	gzip  on;
	gzip_http_version 1.1;
	gzip_vary on;
	gzip_comp_level 6;
	gzip_proxied any;
	gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
	gzip_buffers 16 8k;
	gzip_disable "MSIE [1-6]\.(?!.*SV1)";

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP $remote_addr;		
                
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Host $host;
		proxy_set_header X-NginX-Proxy true;
		proxy_read_timeout 5m;
		proxy_connect_timeout 5m;
		proxy_pass http://127.0.0.1:3000;
		proxy_redirect off;
		#proxy_cache pcache;
		#proxy_cache_key "$scheme$host$request_method$request_uri";
	}


    	# do a case insensitive regular expression match for any files ending in the list of extentions
    	location ~* ^.+\.(html|htm|png|jpeg|jpg|gif|pdf|ico|css|js|txt|rtf|flv|swf)$ {

        	    # location of the web root for all static files
           	 root /usr/local/share/www/public;

            	# set the Expires header to 31 December 2037 23:59:59 GMT, and the Cache-Control max-age to 10 years
            	expires max;
  		add_header Pragma public;
  		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    	}
	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;


}



